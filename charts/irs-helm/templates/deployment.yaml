# Copyright (c) 2022,2024
#       2022: ZF Friedrichshafen AG
#       2022: ISTOS GmbH
#       2022,2024: Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
#       2022,2023: BOSCH AG
# Copyright (c) 2021,2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0. *
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "irs.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "irs.labels" . | nindent 4 }}
  annotations:
    checkov.io/skip1: CKV_K8S_35=Secrets are handled by vault and need to be passed as environment variables
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "irs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-spring-app-config.yaml") . | sha256sum }}
        checksum/semanticmodels: {{ include (print $.Template.BasePath "/configmap-semantic-models.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "irs.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # @url: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/#use-the-default-service-account-to-access-the-api-server
      automountServiceAccountToken: false
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: application-config
              mountPath: /app/config
            {{- if .Values.semanticshub.localModels }}
            - name: semantic-models
              mountPath: /app/semantic-models
            {{- end }}
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: minioUser
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: minioPassword
            - name: SEMANTICS_OAUTH2_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: semanticsId
            - name: SEMANTICS_OAUTH2_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: semanticsSecret
            - name: DISCOVERY_OAUTH2_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: discoveryClientId
            - name: DISCOVERY_OAUTH2_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: discoveryClientSecret
            - name: BPDM_OAUTH2_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: bpdmClientId
            - name: BPDM_OAUTH2_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: bpdmClientSecret
            - name: EDC_API_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "irs.secretName" . }}
                  key: edcApiSecret
            {{- if .Values.env }}
            {{- include "common.tplvalues.render" (dict "value" .Values.env "context" $) | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: http-trusted
              containerPort: 8181
              protocol: TCP
            - name: actuator
              containerPort: 4004
              protocol: TCP
          # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: actuator
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: actuator
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: application-config
          configMap:
            name: {{ include "irs.fullname" . }}-configmap
            items:
              - key: application.yaml
                path: application.yaml
        {{- if .Values.semanticshub.localModels }}
        - name: semantic-models
          configMap:
            name: {{ include "irs.fullname" . }}-configmap-semantic-models
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}