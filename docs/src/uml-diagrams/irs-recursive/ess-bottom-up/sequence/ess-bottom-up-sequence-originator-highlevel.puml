@startuml
skinparam monochrome true
skinparam shadowing false
skinparam defaultFontName "Architects daughter"

autonumber "<b>[000]"

actor "Client" as User


User -> IncidentApp : Incident notification (incidentID)
activate IncidentApp

box Incident Company (Tier 4)
participant "IRS" as IRS_Tier_N
participant "dDTR_Tier_Incident" as dDTR_Tier_N
participant "SubmodelServer_Tier_Incident" as SubmodelServer_Tier_N
end box

IncidentApp -> IRS_Tier_N : /irs/ess/orders
    note left
        Investigation of customers who must be notified about an incident.
        parameters:
            {
            keys [
                bpn : <bpnl>
                globalAssetIds : <globalAssetIds>
            ]
            bomLifecycle : asPlanned,
            direction : upwards (SingleLevelUsageAsPlanned),
            depth : 1,
            incidentBPNSs [<bpns>,..],
            filterExpressions :  [
                        {
                          validityTimestamp : <validityTimestamp>
                        },
                     ]
            }
    end note

    loop over globalAssetIds
            IRS_Tier_N -> IRS_Tier_N : /ess/customer/investigation
            ref over IRS_Tier_N, dDTR_Tier_N
                GET aas for globalAssetId from dDTR
            end ref
            IRS_Tier_N -> IRS_Tier_N : detect endpoint for submodel "PartAsPlanned"
            IRS_Tier_N -> IRS_Tier_N : validityPeriodChecker
                             note left
                                 validityPeriodCheck: Checks if passed timestamp is in validity period defined with
                                 validityPeriod.validFrom and  PartAsPlanned.validityPeriod.validTo

                                 PartAsPlanned.validityPeriod.validFrom
                                 >= validityTimestamp
                                 >= PartAsPlanned.validityPeriod.validTo
                             end note
            opt validityCheck == false
                IRS_Tier_N -> IRS_Tier_N : skip globalAssetId;
            else
                IRS_Tier_N -> IRS_Tier_N : detect endpoint for submodel "PartSiteInformationAsPlanned"
                ref over IRS_Tier_N, SubmodelServer_Tier_N
                     GET PartSiteInformationAsPlanned for globalAssetId from dDTR
                end ref
                IRS_Tier_N -> IRS_Tier_N : Check PartSiteInformationAsPlanned if BPNS matches
                note left
                    Check if bpns contains any catenaXsiteId  in PartSiteInformationAsPlanned
                end note
                opt "!bpns.containsAny(catenaXsiteIds) then"
                    IRS_Tier_N -> IRS_Tier_N : skip globalAssetId;
                else

                     ref over dDTR_Tier_N, dDTR_Tier_Customer, SubmodelServer_Tier_Customer
                         Determining relationships 1 tier level upwards
                     end ref



                     IRS_Tier_N -> IRS_Tier_N : aggregateBPNLs
                        note left
                            Aggregate globalAssetIds and bpns numbers for each bpnl
                            [{globalAssetId,businessPartnerNumberLegalEntity, [businessPartnerNumberSite]}]
                        end note
                end opt
            end opt
    end loop

    IncidentApp --> IRS_Tier_N : GET /irs/orders/{orderId}
    IncidentApp <-- IRS_Tier_N : Get a batch order for a given orderId.
    IncidentApp --> IRS_Tier_N : GET /irs/orders/{orderId}/batches/{batchId}
    IncidentApp <-- IRS_Tier_N : Get a batch with a given batchId for a given orderId.
    IncidentApp --> IRS_Tier_N : GET /irs/customer/investigation/{id}
    IncidentApp <-- IRS_Tier_N : Return job with item graph for the requested id.
    User <-- IncidentApp : Return job with item graph for the requested id.
      note left
            {
                customers : [
                    {
                        businessPartnerNumberLegalEntity : <bpnl>,
                        "customerParts" [
                            {
                                globalAssetId:   <globalAssetId>,
                                sites : [
                                    {<bpns>},
                                ],
                             }, ...
                        ]
                    },
                ]
            }
        end note

@enduml